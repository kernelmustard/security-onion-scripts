#!/bin/bash

# SUDO check
if [[ ! $EUID == 0 ]]; then
	echo "This script should be run as root. Exiting..."
	exit 0
fi

# Manager check
if [[ ! $(salt-key | grep "$HOSTNAME") == $(salt-key | grep _manager) ]]; then
	echo "This script should be run on a manager node. Exiting..."
	exit 0
fi

so-rmnode() {

	###################################
	## Security Onion Sensor Remover ##
	###################################

	echo "salt-key -L"
	salt-key -L
	read -rp "Name of the node to remove: " node_name
	# get ip from config file = node_ip
	node_ip=$(grep node_address /opt/so/saltstack/local/pillar/minions/"${node_name}"_sensor.sls | sed "s/'//g" | sed 's/  node_address: //g')
	# Confirmation
	read -rp "$( echo -e "You are about to remove sensor $node_name.\nConfirm? (y/n): ")" confirm

	# continue if confirmed, else return 0
	if [[ $confirm == "y" ]]; then 
		clear
		echo "Removal Confirmed."
	else
		echo "Confirmation rejected or invalid choice. Exiting..."
		return 0
	fi

	echo "Removing ${node_name} ssh keys ..."
	for i in /home/*; do
		#sed will not remove trailing newlines, choose a different tool (later)
		sed -i "s/^${node_ip}.*$//g" "${i}"/.ssh/known_hosts
	done
	sed -i "s/^${node_ip}.*$//g" /root/.ssh/known_hosts

	echo "Removing ${node_name} salt key ..."
	salt-key -d "${node_name}"_sensor

	echo "Removing ${node_name} salt configuration entries ..."
	rm -f /opt/so/saltstack/local/pillar/minions/"${node_name}"_sensor.sls

	#why did i put this in?
	#echo "Removing ${node_name} from Grafana Dashboards ..."
	#sed -i 's///g' /opt/so/conf/grafana/grafana_dashboards/sensor.json

	echo "Removing /nsm/soc/jobs/${node_name}/* ..."
	rm -rf /nsm/soc/jobs/"${node_name}"
	
	echo "Restarting Grafana ..." #apply grafana config changes
	so-grafana-restart

	echo "Restarting the SOC ..." #make web gui reflect changes
	so-soc-restart

	clear
	echo "All done!"
	return 0
}

so-rmnode